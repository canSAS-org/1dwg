<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>
<!-- 
    ########### SVN repository information ###################
    # $Date$
    # $Author$
    # $Revision$
    # $HeadURL$
    # $Id$
    ########### SVN repository information ###################
-->
<!-- from: http://www.smallangles.net/wgwiki/index.php/cansas1d_binding_Java-->
<section xml:id="cansas1d_documentation-binding-Java" xmlns="http://docbook.org/ns/docbook"
    version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Java (JAXB) binding for the cansas1d/1.1 standard</title>
    <para> A Java binding for the cansas1d/1.1 standard has been auto-created using the JAXB tools
        from Sun (see below for more on JAXB) <indexterm>
            <primary>binding</primary>
            <secondary>Java</secondary>
        </indexterm> using the <literal>cansas1d.xsd</literal> XML Schema. <indexterm>
            <primary>XML Schema</primary>
        </indexterm> Resources (JAR files and documentation) for the Java binding may be found in
        the canSAS subversion repository <footnote><para>
                <link xlink:href="http://svn.smallangles.net/svn/canSAS/1dwg/tags/v1.0/java"
                        ><literal>http://svn.smallangles.net/svn/canSAS/1dwg/tags/v1.0/java</literal
                    ></link></para></footnote>
        <glosslist>
            <glossentry>
                <glossterm>
                    <link xlink:href="http://svn.smallangles.net/svn/canSAS/1dwg/tags/v1.0/java/"
                        ><literal>http://svn.smallangles.net/svn/canSAS/1dwg/tags/v1.0/java</literal></link>
                </glossterm>
                <glossdef>
                    <para>canSAS subversion repository tagged release directory for the Java binding.
                    Use resources from this directory in your development projects.</para>
                </glossdef>
            </glossentry>
            <glossentry>
                <glossterm>
                    <link xlink:href="http://svn.smallangles.net/svn/canSAS/1dwg/tags/v1.0/java/cansas1d-1.0.jar"
                        ><literal>cansas1d-1.0.jar</literal></link>
                </glossterm>
                <glossdef>
                    <para>This is the JAR file to add to your CLASSPATH in order to use this
                        binding.</para>
                </glossdef>
            </glossentry>
            <glossentry>
                <glossterm>
                    <link xlink:href="http://svn.smallangles.net/svn/canSAS/1dwg/tags/v1.0/java/cansas1d-1.0-javadoc.jar"
                        ><literal>cansas1d-1.0-javadoc.jar</literal></link>
                </glossterm>
                <glossdef><para>Use this JAR file if you want to add the 
                javadoc documentation as tooltips to your editor, such as 
                eclipse. 
                (auto-generated from the project source code using maven2)
                Note that this file is compatible with any ZIP program and can be unzipped
                to provide a directory with all the documentation as a set of HTML pages.
                Start with the <literal>index.html</literal> page.</para></glossdef>
            </glossentry>
            <glossentry>
                <glossterm>
                    <link xlink:href="http://svn.smallangles.net/svn/canSAS/1dwg/tags/v1.0/java/cansas1d-1.0-sources.jar"
                        ><literal>cansas1d-1.0-sources.jar</literal></link>
                </glossterm>
                <glossdef><para>JAR file of the source code.   
                    (auto-generated from the project source code using maven2)
                    Note that this is <emphasis>just</emphasis>
                    the source code tree and not the full project development tree
                    for the Java (JAXB) API.<footnote><para><link
                        xlink:href="http://svn.smallangles.net/trac/canSAS/browser/1dwg/trunk/java/maven/eclipse/"
                        ><literal>http://svn.smallangles.net/trac/canSAS/browser/1dwg/trunk/java/maven/eclipse/</literal
                        ></link></para></footnote></para></glossdef>
            </glossentry>
            <glossentry>
                <glossterm>
                    <link xlink:href="http://svn.smallangles.net/svn/canSAS/1dwg/tags/v1.0/java/cansas1d-1.0.pdf"
                        ><literal>cansas1d-1.0.pdf</literal></link>
                    </glossterm>
                <glossdef><para>PDF file of the javadoc source code 
                    documentation.
                    (auto-generated from the project source code using pdfdoclet)</para></glossdef>
            </glossentry>
            <glossentry>
                <glossterm>
                    <link xlink:href="http://svn.smallangles.net/trac/canSAS/browser/1dwg/trunk/java/maven/eclipse"
                        ><literal
                            >http://svn.smallangles.net/trac/canSAS/browser/1dwg/trunk/java/maven/eclipse</literal
                        ></link>
                </glossterm>
                <glossdef>
                    <para>canSAS Development project subversion repository for the Java binding.  
                        Only use this if you want to participate as a code developer of this binding.</para>
                </glossdef>
            </glossentry>
        </glosslist>
    </para>
    <section>
        <title>Example_canSAS_Reader.java: example usage in JAVA</title>
        <para> An example (Example_canSAS_Reader.java) has been 
            constructed<footnote><para><link
                xlink:href="http://svn.smallangles.net/trac/canSAS/browser/1dwg/trunk/java/maven/eclipse/src/main/java/org/scatteringsw/reader/Example_canSAS_Reader.java"
                    ><literal>http://svn.smallangles.net/trac/canSAS/browser/1dwg/trunk/java/maven/eclipse/src/main/java/org/scatteringsw/reader/Example_canSAS_Reader.java</literal></link></para></footnote>
            to show how to read a cansas1d/1.1 XML file using the Java API. </para>
        <para> In short, these are the important two lines: <informalexample>
                <programlisting>CanSas1dType reader = new CanSas1dType();</programlisting>
            </informalexample> and <informalexample>
                <programlisting>SASrootType sasRoot = reader.open(xmlFile);</programlisting>
            </informalexample> where <literal>String xmlFile;</literal> is the name of the XML file
            to be read. You will also need these imports <informalexample>
                <programlisting>
        import javax.xml.bind.JAXBException;
        
        import net.smallangles.cansas1d.CanSas1dType;
        import net.smallangles.cansas1d.SASdataType;
        import net.smallangles.cansas1d.SASentryType;
        import net.smallangles.cansas1d.SASrootType;
        import net.smallangles.cansas1d.SASentryType.Run;
                </programlisting>
            </informalexample> Also, since <literal>CanSas1dType.open(xmlFile)</literal> can throw a
                <literal>JAXBException</literal>, you should use a <literal>try{} catch {}</literal>
            clause. See the source code for the example. </para>
        <para> Here is a Java class that shows how to use the JAXB binding. 
            <indexterm>
                <primary>Java file</primary>
                <secondary><literal>Example_canSAS_Reader.java</literal></secondary>
            </indexterm> 
            Use this with any of the test data supplied with the cansas-1d-standard
            directory (above). By default, it shows the two samples in the
                <literal>1998spheres.xml</literal> example file.<footnote><para><link
                        xlink:href="http://svn.smallangles.net/trac/canSAS/browser/1dwg/trunk/1998spheres.xml"
                            ><literal>http://svn.smallangles.net/trac/canSAS/browser/1dwg/trunk/1998spheres.xml</literal
                    ></link></para></footnote>
            <indexterm>
                <primary>XML file</primary>
                <secondary>1998spheres.xml</secondary>
            </indexterm> (You'll have to get the directory paths right until this documentation
            improves.) </para>
        <programlisting language="java" linenumbering="numbered"
            ><textobject><textdata fileref="Example_canSAS_Reader.java"/></textobject></programlisting>
    </section>
    <section>
        <title>example: how to retrieve I(Q)</title>
        <indexterm>
            <primary>I(Q)</primary>
        </indexterm>
        <para>This is a slightly longer example.
            Look for the line (near line 75) that has <informalexample>
                <programlisting>Qsas[i] = sdt.getIdata().get(i).getQ().getValue();</programlisting>
            </informalexample> to see the operations that unwind the data into usable double[]
            vectors. Pretty straightforward although there is lots of
            interesting yet unnecessary diagnostic output. </para>
        <itemizedlist>
            <listitem>
                <para>sdt : SASdataType object</para>
            </listitem>
            <listitem>
                <para>getIdata() : /SASdata/Idata</para>
            </listitem>
            <listitem>
                <para>get(i) : /SASdata/Idata[i]</para>
            </listitem>
            <listitem>
                <para>getQ() : /SASdata/Idata/Q</para>
            </listitem>
            <listitem>
                <para>getValue() : /SASdata/Idata/Q (value, not the unit)</para>
            </listitem>
        </itemizedlist>
        <section>
            <title>GetSASdata.java</title>
            <indexterm>
                <primary>Java file</primary>
                <secondary><literal>GetSASdata.java</literal></secondary>
            </indexterm>
            <programlisting language="java" linenumbering="numbered"><textobject><textdata fileref="GetSASdata.java"
            /></textobject></programlisting>
        </section>
        <section>
            <title>java-test.xml</title>
            <indexterm>
                <primary>XML file</primary>
                <secondary><literal>java-test.xml</literal></secondary>
            </indexterm>
            <para> 
                <literal>java-test.xml</literal> is an example cansas1d/1.1 XML data file
                (derived from the standard test file for the <literal>lake</literal> 
                desmearing code).</para>
            <programlisting language="xml" linenumbering="numbered" 
                ><textobject><textdata fileref="java-test.xml"
            /></textobject></programlisting>
        </section>
    </section>
    <section>
        <title>JAXB</title>
        <itemizedlist>
            <listitem>
                <para> Question : What is JAXB? 
                    <indexterm significance="preferred">
                        <primary>JAXB</primary>
                    </indexterm>
                </para>
            </listitem>
            <listitem>
                <para>Answer : <link
                        xlink:href="http://java.sun.com/developer/technicalArticles/WebServices/jaxb/"
                        >Java Architecture for XML Binding (JAXB)</link>: <footnote><para>
                    <link
                        xlink:href="http://java.sun.com/developer/technicalArticles/WebServices/jaxb/"
                            ><literal>http://java.sun.com/developer/technicalArticles/WebServices/jaxb/</literal
                        ></link></para></footnote>
                </para>
            </listitem>
            <listitem>
                <para>Wow! : Is it available for other languages?</para>
            </listitem>
            <listitem>
                <para>Answer : Ask Google. JAXB is for Java. (<link
                        xlink:href="http://java.sun.com/developer/technicalArticles/WebServices/jaxb/"
                        >example</link>) <footnote><para>
                            <link xlink:href="http://www.devx.com/ibm/Article/20261"
                                    ><literal>http://www.devx.com/ibm/Article/20261</literal></link></para></footnote>
                </para>
            </listitem>
            <listitem>
                <para> Question : How do I pull out the
                    <emphasis>I(Q)</emphasis><indexterm><primary>I(Q)</primary></indexterm>
                    data? </para>
            </listitem>
            <listitem>
                <para> Answer : see fragment above (gets data for desmearing) </para>
            </listitem>
            <listitem>
                <para> Question : Has JAXB been useful? </para>
            </listitem>
            <listitem>
                <para> Answer : <emphasis>Very useful.</emphasis>
                    Since an XML Schema was defined, JAXB was 
                    very useful to create a Java binding 
                    automatically.  Then, <literal>javadoc</literal> was able to
                    auto-generate the basic documentation as HTML and 
                    <literal>pdfdoclet</literal> was able to auto-generate the 
                    documentation in a PDF file.</para>
            </listitem>
        </itemizedlist>
    </section>
</section>
